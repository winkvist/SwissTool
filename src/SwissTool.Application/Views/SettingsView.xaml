<controls:MetroDialogWindow x:Class="SwissTool.Application.Views.SettingsView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:SwissTool.Framework.UI.Controls;assembly=SwissTool.Framework.UI"
        xmlns:controls1="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:converters="clr-namespace:SwissTool.Application.Converters"
        Title="Application settings" Height="389" Width="603"
        ResizeMode="NoResize" ShowInTaskbar="False" WindowStartupLocation="CenterScreen" Topmost="True"
        Heading="Application settings" 
        SubHeading="This section lets you customize SwissTool"
        AcceptCommand="{Binding Path=SaveChangesCommand}" 
        CancelCommand="{Binding Path=CloseCommand}" 
        Image="{DynamicResource IconSettings}"
        ShowCancelButton="True">
    <controls:MetroDialogWindow.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding Path=CloseCommand}" />
    </controls:MetroDialogWindow.InputBindings>
    <controls:MetroDialogWindow.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:AccentColorConverter x:Key="AccentColorConverter" />
        <Style TargetType="{x:Type ListBox}" x:Key="ListBoxStyle">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" Margin="3">
                            <Image Source="{Binding Path=Extension.Icon}" Height="16" Width="16"></Image>
                            <TextBlock Text="{Binding Path=Extension.Name}" Margin="5 0 0 0"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </controls:MetroDialogWindow.Resources>
    <Grid>
        <TabControl Margin="7 0 7 0">
            <TabItem Header="Application">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="310" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="General" Padding="5" Grid.Column="0" Grid.Row="0" Margin="5">
                        <StackPanel>
                            <CheckBox Content="Autostart with Windows" Margin="3" IsChecked="{Binding Path=SettingsCopy.AutostartWithWindows, Mode=TwoWay}" />
                            <CheckBox Content="Automatically search for updates" Margin="3" IsChecked="{Binding Path=SettingsCopy.AutomaticallySearchForUpdates, Mode=TwoWay}" IsEnabled="True" Click="CheckBoxClick" />
                            <StackPanel Orientation="Horizontal" Margin="20 3 3 3" IsEnabled="{Binding Path=IsCheckForUpdatesEnabled}">
                                <Label>Check for updates every</Label>
                                <controls1:NumericUpDown Width="80" Value="{Binding Path=SettingsCopy.UpdateCheckInterval, Mode=TwoWay}" Minimum="1" Maximum="48">
                                </controls1:NumericUpDown>
                                <Label Content="hours"></Label>
                            </StackPanel>
                            <CheckBox Content="Automatically download and install updates" Margin="20 3 3 3" IsChecked="{Binding Path=SettingsCopy.AutomaticallyDownloadAndInstallUpdates, Mode=TwoWay}" IsEnabled="{Binding Path=IsCheckForUpdatesEnabled}" Click="CheckBoxClick" />
                        </StackPanel>
                    </GroupBox>
                    <GroupBox Header="Appearance" Padding="5" Grid.Column="1" Grid.Row="0" Margin="5">
                        <StackPanel>
                            <DockPanel>
                                <Label Padding="2">Theme</Label>
                                <ComboBox Margin="10,0,0,0" ItemsSource="{Binding Themes}" DisplayMemberPath="Name" SelectedItem="{Binding Path=SelectedTheme, Mode=TwoWay}"></ComboBox>
                            </DockPanel>
                            <DockPanel Margin="0,3,0,0">
                                <Label Padding="2">Accent</Label>
                                <ComboBox Margin="10,0,0,0" ItemsSource="{Binding Accents}" SelectedItem="{Binding Path=SelectedAccent, Mode=TwoWay}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Rectangle Fill="{Binding Path=., Converter={StaticResource AccentColorConverter}}" Width="16" Height="16" Margin="0,2,5,2" />
                                                <TextBlock Text="{Binding}" />
                                            </StackPanel>
                                        </DataTemplate>

                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </DockPanel>
                            <TextBlock TextWrapping="WrapWithOverflow" Padding="4" Visibility="{Binding IsRestartRequired, Converter={StaticResource BoolToVisibilityConverter}}">Application needs to be restarted for the changes to take full effect</TextBlock>
                        </StackPanel>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem Header="Extensions">
                <DockPanel Margin="5">
                    <ListBox DockPanel.Dock="Left" Width="150" ItemsSource="{Binding Path=Extensions}" Style="{StaticResource ListBoxStyle}" SelectedItem="{Binding Path=SelectedExtension}" Margin="0 0 5 0" Background="Transparent" BorderThickness="0" />
                    <DockPanel DockPanel.Dock="Right" LastChildFill="True" DataContext="{Binding Path=SelectedExtension}">

                        <GroupBox Header="Hotkey configuration" Padding="5" Margin="0" DockPanel.Dock="Bottom" Visibility="{Binding Path=HasSelectedAction, Converter={StaticResource BoolToVisibilityConverter}}">
                            <Grid DataContext="{Binding Path=SelectedAction}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="70" />
                                    <ColumnDefinition Width="90" />
                                    <ColumnDefinition Width="35" />
                                    <ColumnDefinition Width="120" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">Modifier 1:</Label>
                                <ComboBox Grid.Row="0" Grid.Column="1" Margin="3" ItemsSource="{Binding Path=FirstModifierKeys}" SelectedItem="{Binding Path=SelectedFirstModifierKey}" PreviewKeyDown="ComboBoxPreviewKeyDown" />
                                <Label Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">Modifier 2:</Label>
                                <ComboBox Grid.Row="1" Grid.Column="1" Margin="3" ItemsSource="{Binding Path=SecondModifierKeys}" SelectedItem="{Binding Path=SelectedSecondModifierKey}" IsEnabled="{Binding Path=HasAssignedFirstModifierKey}" PreviewKeyDown="ComboBoxPreviewKeyDown" />
                                <Label Grid.Row="0" Grid.Column="2" VerticalAlignment="Center">Key:</Label>
                                <ComboBox Grid.Row="0" Grid.Column="3" Margin="3" ItemsSource="{Binding Path=Keys}" SelectedItem="{Binding Path=SelectedKey}" PreviewKeyDown="ComboBoxKeyPreviewKeyDown"></ComboBox>
                                <Label Grid.Row="1" Grid.Column="3" Grid.ColumnSpan="2" Foreground="Red" Visibility="{Binding Path=CollisionDetected, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" VerticalAlignment="Center">This hotkey is already in use</Label>
                            </Grid>
                        </GroupBox>

                        <DataGrid ItemsSource="{Binding Actions}" AutoGenerateColumns="False" SelectedItem="{Binding Path=SelectedAction}">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="30" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="{Binding Path=Action.Icon}" Width="16" Height="16" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Action" Width="185" Binding="{Binding Path=Action.Name}" IsReadOnly="True" />
                                <DataGridTextColumn Header="Hotkey" Binding="{Binding Path=AssignedHotKeyDisplayString}" IsReadOnly="True" Width="*" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </DockPanel>
            </TabItem>
        </TabControl>
    </Grid>
</controls:MetroDialogWindow>
